// Move this file under /usr/share/X11/xkb/symbols
// Install by updating evdev.xml
// https://askubuntu.com/questions/510024/what-are-the-steps-needed-to-create-new-keyboard-layout-on-ubuntu
// ---> tohle funguje!!!
// ---> Je potreba nadefinovat tu novou klavesnici jako file `hopkeyboard` a pak zmenit evdev.xml
// ---> A pak je ta klavesnice vybratelna v ubuntu UI menu




// This is my hop_keyboard
    // Tutorials:
    //  https://unix.stackexchange.com/questions/202883/create-xkb-configuration-from-xmodmap
    //  https://www.charvolant.org/doug/xkb/html/node5.html
    //  https://www.x.org/releases/X11R7.6/doc/xorg-docs/input/XKB-Config.html
    //  https://medium.com/@damko/a-simple-humble-but-comprehensive-guide-to-xkb-for-linux-6f1ad5e13450
    // Examples:
    //  https://github.com/nakal/xmonad-conf/blob/f25e81bf16d212b35dfe69765a135787c09c4b7b/xkb/us_alt
    //  https://unix.stackexchange.com/questions/205226/xkb-make-ctrlbackspace-behave-as-delete
    

default partial alphanumeric_keys modifier_keys
xkb_symbols "hop_keyboard_symbols" {
    name[Group1]= "English (US - with Mac friendly touches)";

    // Default "pc105" keyboard, English (US) keyboard, Evdev Standardized Keycodes.
    include "pc+us+inet(evdev)"
    // Alt+shift chooses the next keyboard group. Not sure if needed. 
    include "group(alt_shift_toggle)"
    // Caps lock acts as escape.
    include "capslock(escape)"
    // Swap left alt and left ctrl.
    include "ctrl(swap_lalt_lctl)"
    // Swap right alt and right ctrl (my edit).
    include "hopkeyboard(swap_ralt_rctl)"

    // Make (new) alt+backspace behave like Delete.
    override key <BKSP> {
        type= "PC_ALT_LEVEL2",
        symbols[Group1]=  [ BackSpace, NoSymbol ],
        actions[Group1] = [ NoAction(), RedirectKey(key=<DELE>,clearMods=Mod1) ]
    };
    
    // Make (new) ctrl+left go all the way to the beginning of the line (like Home). 
    override key <LEFT> {
        type="PC_CONTROL_LEVEL2",
        symbols[Group1] = [ Left, NoSymbol ],
        actions[Group1] = [ NoAction(), RedirectKey(key=<HOME>, clearMods=Control) ]
    };

    // Make (new) ctrl+right go all the way to the end of the line (like End). 
    override key <RGHT> {
        type="PC_CONTROL_LEVEL2",
        symbols[Group1]= [ Right, NoSymbol ],
        actions[Group1] = [ NoAction(), RedirectKey(key=<END>, clearMods=Control) ]
    };

    // Make (new) ctrl+up do PgUp. 
    override key <UP> {
        type="PC_CONTROL_LEVEL2",
        symbols[Group1]= [ Up, NoSymbol ],
        actions[Group1] = [ NoAction(), RedirectKey(key=<PGUP>, clearMods=Control) ]
    };

    // Make (new) ctrl+down do PgDown. 
    override key <DOWN> {
        type="PC_CONTROL_LEVEL2",
        symbols[Group1]= [ Down, NoSymbol ],
        actions[Group1] = [ NoAction(), RedirectKey(key=<PGDN>, clearMods=Control) ]
    };

    // TODO: Add ctrl+up, ctrl+down for PgUp, PgDown
};

// Swap the functions of the left Alt key and the left Ctrl key.
partial modifier_keys
xkb_symbols "swap_ralt_rctl" {
    replace key <RALT> { [ Control_R, Control_R ] };
    replace key <RCTL> { [ Alt_R, Meta_R ] };
    modifier_map Mod1    { <RCTL> };
    modifier_map Control { <RALT> };
};